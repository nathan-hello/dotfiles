.TH DWM 1 dwm\-VERSION
.SH NAME
dwm \- dynamic window manager
.SH SYNOPSIS
.B dwm
.RB [ \-v ]
.SH DESCRIPTION
dwm is a dynamic window manager for X. It manages windows in tiled, monocle
and floating layouts. Either layout can be applied dynamically, optimising the
environment for the application in use and the task performed.
.P
In tiled layouts windows are managed in a master and stacking area. The master
area on the left contains one window by default, and the stacking area on the
right contains all other windows. The number of master area windows can be
adjusted from zero to an arbitrary number. In monocle layout all windows are
maximised to the screen size. In floating layout windows can be resized and
moved freely. Dialog windows are always managed floating, regardless of the
layout applied.
.P
Windows are grouped by tags. Each window can be tagged with one or multiple
tags. Selecting certain tags displays all windows with these tags.
.P
Each screen contains a small status bar which displays all available tags, the
layout, the title of the focused window, and the text read from the root window
name property, if the screen is focused. A floating window is indicated with an
empty square and a maximised floating window is indicated with a filled square
before the windows title.  The selected tags are indicated with a different
color. The amount of windows for each tag is indicated with squares on the tag's
top left corner. The tags of the focused window are indicated with a rectangle
instead of a square.
.P
dwm draws a small border around windows to indicate the focus state.
.P
This is a custom dwm build. It features more layouts (BStack, BStackHoriz,
Centered Master, Threadmill and Columns). It also has cfacts, swapup and swapdown
functions to give more flexibility to stacked clients. As well as several
appearance addons such as alpha, client gaps, monitor gaps, bar gaps, bar padding
and bar colors. + other misc tuning.
It integrates with xmenu to add a startmenu, layout and window selection menu.
.SH OPTIONS
.TP
.B \-v
prints version information to stderr, then exits.
.SH USAGE
.SS Status bar
.TP
.B Tag section
button1 to switch to tag, button3 to toggle tags. Enabled tags have their
windows visible. Mod4 + button1 to set selected client to tag, mod4
+ button3 to toggle selected client's tags.
.TP
.B Layout section
button1 to open layout menu ( with 
.BR xmenu(1)
), button3 to switch to previously used layout.
.TP
.B Title section
button1 to open the window menu ( with
.BR xmenu(1)
), button3 to zoom the selected client into master stack.
.TP
.B Status section
button1 to open start menu ( with
.BR xmenu(1)
), button3 to open new terminal instance.
.SS Keyboard commands
.TP
.B Mod4\-t
Start
.BR st(1).
.TP
.B Mod4\-d
Spawn
.BR dmenu(1)
for launching other programs.
.TP
.B Mod4\-s
Open start menu (
.BR xmenu(1)
 & "startmenu" script).
.TP
.B Mod4\-w
Spawn web browser ( defined by $BROWSER environment variable ).
.TP
.B Mod4\-f
Spawn file manager ( defined by $FILEMANAGER environment variable ).
.TP
.B Mod4\-l
Lock session ( 
.BR slock(1)
).
.TP
.B Print
Take a screenshot (
.BR scrot(1)
).
.TP
.B Mod4\-q
Closes focused window.
.TP
.B Mod4\-Mod1\-q
Quit dwm.
.TP
.B Mod4\-Up
Increase master area size.
.TP
.B Mod4\-Down
Decrease master area size.
.TP
.B Mod1\-Up
Increases focused window area size in stack.
.TP
.B Mod1\-Down
Decreases focused window area size in stack.
.TP
.B Mod1\-=
Resets focused window area size in stack.
.TP
.B Mod4\-Right
Focus next window.
.TP
.B Mod4\-Left
Focus previous window.
.TP
.B Mod4\-Return
Focus 1st master window.
.TP
.B Mod1\-Right
Swaps focused window with next window (tiled layouts only).
.TP
.B Mod1\-Left
Swaps focused window with previous window (tiled layouts only).
.TP
.B Mod1\-Return
Zooms/cycles focused window to/from master area (tiled layouts only).
.TP
.B Mod1\-f
Toggles focused window between fullscreen and normal state.
.TP
.B Mod1\-Space
Toggles focused window between tiled and floating state.
.TP
.B Mod4\-End
Send focused window to next screen, if any.
.TP
.B Mod4\-Home
Send focused window to previous screen, if any.
.TP
.B Mod4\-w
Open the window's menu (with 
.BR xmenu
).
.TP
.B Mod4\-Shift\-Right
Focus next screen, if any.
.TP
.B Mod4\-Shift\-Left
Focus previous screen, if any.
.TP
.B Mod4\-Shift\-b
Toggles bar on and off.
.TP
.B Mod4\-Shift\-g
Toggles gaps on and off.
.TP
.B Mod4\-F1
Sets tiled layout.
.TP
.B Mod4\-F2
Sets floating layout.
.TP
.B Mod4\-F3
Sets monocle layout.
.TP
.B Mod4\-F4
Sets monocle bstack layout.
.TP
.B Mod4\-F5
Sets monocle bstackhoriz layout.
.TP
.B Mod4\-F6
Sets centered master layout.
.TP
.B Mod4\-F7
Sets threadmill layout.
.TP
.B Mod4\-F8
Sets columns layout.
.TP
.B Mod4\-=
Increases number of windows in master area.
.TP
.B Mod4\--
Decreases number of windows in master area.
.TP
.B Mod4\-BackSpace
Resets number of windows in master area to 1.
.TP
.B Mod1\-[1..n]
Apply nth tag to focused window.
.TP
.B Mod1\-0
Apply all tags to focused window.
.TP
.B Mod1\-Shift\-[1..n]
Add/remove nth tag to/from focused window.
.TP
.B Mod4\-[1..n]
View all windows with nth tag.
.TP
.B Mod4\-0
View all windows with any tag.
.TP
.B Mod4\-t
Open layout menu (with
.BR xmenu
).
.TP
.B Mod4\-Shift\-[1..n]
Add/remove all windows with nth tag to/from the view.
.SS Windows mouse commands
.TP
.B Mod4\-Button1
Move focused window while dragging. Tiled windows will be toggled to the floating state.
.TP
.B Mod4\-Button3
Toggles focused window between floating and tiled state.
.TP
.B Mod1\-Button1
Resize focused window while dragging. Tiled windows will be toggled to the floating state.
.TP
.B Mod1\-Button3
Open the window menu (with
.BR xmenu
).
.SS Root window mouse commands
.TP
.B Button1
open start menu (with
.BR xmenu(1)
).
.TP
.B Button3
Focus 1st master window.
.SH CUSTOMIZATION
dwm is customized by creating a custom config.h and (re)compiling the source
code. This keeps it fast, secure and simple.
.SH SEE ALSO
.BR xmenu (1),
.BR dmenu (1),
.BR st (1),
.BR slock(1),
.BR scrot(1)
.SH ISSUES
Java applications which use the XToolkit/XAWT backend may draw grey windows
only. The XToolkit/XAWT backend breaks ICCCM-compliance in recent JDK 1.5 and early
JDK 1.6 versions, because it assumes a reparenting window manager. Possible workarounds
are using JDK 1.4 (which doesn't contain the XToolkit/XAWT backend) or setting the
environment variable
.BR AWT_TOOLKIT=MToolkit
(to use the older Motif backend instead) or running
.B xprop -root -f _NET_WM_NAME 32a -set _NET_WM_NAME LG3D
or
.B wmname LG3D
(to pretend that a non-reparenting window manager is running that the
XToolkit/XAWT backend can recognize) or when using OpenJDK setting the environment variable
.BR _JAVA_AWT_WM_NONREPARENTING=1 .
.SH BUGS
Send all bug reports with a patch to hackers@suckless.org.
